/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.mycompany.restaurante.cliente.presentacion;
import co.mycompany.restaurante.cliente.domain.services.RestauranteService;
import static co.mycompany.restaurante.cliente.infra.Messages.warningMessage;
import co.mycompany.restaurante.commons.domain.Componente;
import co.mycompany.restaurante.commons.domain.DiaSemana;
import co.mycompany.restaurante.commons.domain.Plato;
import co.mycompany.restaurante.commons.domain.Restaurante;
import co.mycompany.restaurante.commons.domain.TipoComponente;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Kevin Morales
 */
public class GUIPagAdicionarPlato extends JFrame {
    
    private RestauranteService service;
    /**
     * atributo: restaurante con el que trabaja la interfaz
     */
    private Restaurante restaurante;
    private int numRegion;
    private int numComponentes;
    private String ruta = "";
    private DiaSemana dia;
    /**
     * Constructor privado: new instacia GUIAdicionarPlato
     */
    private GUIPagAdicionarPlato(){
        initComponents();
        setSize(800, 550);
        setLocationRelativeTo(null);
    }
    /**
     * patron singleton, instancia de la misma clase 
     */
    private static GUIPagAdicionarPlato instance;
    /**
     * patron singleton: deveulve instancia unica si no crea la unica instancia
     * @param restaurante 
     * @param service 
     * @return 
     */
    public static GUIPagAdicionarPlato getInstance(Restaurante restaurante,RestauranteService service) {
        if (instance == null) {
            instance = new GUIPagAdicionarPlato();
            instance.service = service;
        }
        instance.restaurante = restaurante;
        instance.actualizarTabla();
        return instance;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel14 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cbxSeleccionarDia = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbxNumeroDeRegistros = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaComponentes = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        btnVerAnterioresComp = new javax.swing.JButton();
        btnVerSiguienteComp = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        btnAgregarMenucomponente = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaMenuSemanal = new javax.swing.JTable();
        btnEliminarcomponenteMenu = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        lblImagen = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        btnEliminarImagen = new javax.swing.JButton();
        btnSubirImagen = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextPane();
        jPanel11 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        btnActualizarPlato = new javax.swing.JButton();
        btnVistaPlato = new javax.swing.JButton();
        btnVolverPagPrincipal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(6);
        setPreferredSize(new java.awt.Dimension(2147483647, 2147483647));

        jPanel14.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("PLATO EJECUTIVO");
        jPanel3.add(jLabel6);

        jPanel14.add(jPanel3, java.awt.BorderLayout.NORTH);

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.LINE_AXIS));

        jLabel5.setText("Dia Semana:");
        jPanel12.add(jLabel5);

        cbxSeleccionarDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el dia", "LUNES", "MARTES", "MIERCOLES", "JUEVES", "VIERNES", "SABADO", "DOMINGO" }));
        cbxSeleccionarDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSeleccionarDiaActionPerformed(evt);
            }
        });
        jPanel12.add(cbxSeleccionarDia);

        jLabel7.setText("Numero De Registros:");
        jPanel12.add(jLabel7);

        cbxNumeroDeRegistros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion", "5", "10", "20" }));
        cbxNumeroDeRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxNumeroDeRegistrosActionPerformed(evt);
            }
        });
        jPanel12.add(cbxNumeroDeRegistros);

        jLabel8.setText("Ordenar Por:");
        jPanel12.add(jLabel8);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione ordenamiento", "ID", "NOMBRE", "TIPO ENTRADA", "TIPO PRINCIPIO", "TIPO PROTEINA", "TIPO BEBIDA" }));
        jPanel12.add(jComboBox3);

        jPanel5.add(jPanel12, java.awt.BorderLayout.NORTH);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new java.awt.GridLayout(2, 0));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new java.awt.BorderLayout());

        tablaComponentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "TIPO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaComponentes);
        if (tablaComponentes.getColumnModel().getColumnCount() > 0) {
            tablaComponentes.getColumnModel().getColumn(0).setResizable(false);
            tablaComponentes.getColumnModel().getColumn(1).setResizable(false);
            tablaComponentes.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel2.setText("TABLA DE COMPONENTES");
        jPanel7.add(jLabel2);

        jPanel1.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        jPanel16.setLayout(new java.awt.GridLayout(1, 0));

        btnVerAnterioresComp.setText("anteriores");
        btnVerAnterioresComp.setEnabled(false);
        btnVerAnterioresComp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerAnterioresCompActionPerformed(evt);
            }
        });
        jPanel16.add(btnVerAnterioresComp);

        btnVerSiguienteComp.setText("siguientes");
        btnVerSiguienteComp.setEnabled(false);
        btnVerSiguienteComp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerSiguienteCompActionPerformed(evt);
            }
        });
        jPanel16.add(btnVerSiguienteComp);

        jPanel8.add(jPanel16);

        jPanel17.setLayout(new java.awt.GridLayout(1, 0));

        btnAgregarMenucomponente.setText("Agregar componente al menu");
        btnAgregarMenucomponente.setEnabled(false);
        btnAgregarMenucomponente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMenucomponenteActionPerformed(evt);
            }
        });
        jPanel17.add(btnAgregarMenucomponente);

        jPanel8.add(jPanel17);

        jPanel1.add(jPanel8, java.awt.BorderLayout.PAGE_END);

        jPanel2.add(jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new java.awt.BorderLayout());

        tablaMenuSemanal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "TIPO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaMenuSemanal);
        if (tablaMenuSemanal.getColumnModel().getColumnCount() > 0) {
            tablaMenuSemanal.getColumnModel().getColumn(0).setResizable(false);
            tablaMenuSemanal.getColumnModel().getColumn(1).setResizable(false);
            tablaMenuSemanal.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel4.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        btnEliminarcomponenteMenu.setText("Eliminar componente del menu");
        btnEliminarcomponenteMenu.setEnabled(false);
        btnEliminarcomponenteMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarcomponenteMenuActionPerformed(evt);
            }
        });
        jPanel4.add(btnEliminarcomponenteMenu, java.awt.BorderLayout.PAGE_END);

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("TABLA DE COMPONENTES DEL MENU");
        jPanel6.add(jLabel1);

        jPanel4.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jPanel2.add(jPanel4);

        jPanel9.setLayout(new java.awt.BorderLayout());

        lblImagen.setText("Imagen");
        jPanel15.add(lblImagen);

        jPanel9.add(jPanel15, java.awt.BorderLayout.CENTER);

        jPanel18.setLayout(new java.awt.GridLayout(1, 0));

        btnEliminarImagen.setText("Eliminar Imagen");
        btnEliminarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarImagenActionPerformed(evt);
            }
        });
        jPanel18.add(btnEliminarImagen);

        btnSubirImagen.setText("Subir Imagen");
        btnSubirImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirImagenActionPerformed(evt);
            }
        });
        jPanel18.add(btnSubirImagen);

        jPanel9.add(jPanel18, java.awt.BorderLayout.SOUTH);

        jPanel2.add(jPanel9);

        jPanel10.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setViewportView(txtDescripcion);

        jPanel10.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jLabel4.setText("DESCRIPCION DEL PLATO");
        jPanel11.add(jLabel4);

        jPanel10.add(jPanel11, java.awt.BorderLayout.NORTH);

        jPanel2.add(jPanel10);

        jPanel5.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel14.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel13.setLayout(new java.awt.GridLayout(1, 0));

        btnActualizarPlato.setText("Actualizar Menu Plato");
        btnActualizarPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarPlatoActionPerformed(evt);
            }
        });
        jPanel13.add(btnActualizarPlato);

        btnVistaPlato.setText("Vista Del Plato");
        btnVistaPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVistaPlatoActionPerformed(evt);
            }
        });
        jPanel13.add(btnVistaPlato);

        btnVolverPagPrincipal.setText("Volver Menu Principal");
        btnVolverPagPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverPagPrincipalActionPerformed(evt);
            }
        });
        jPanel13.add(btnVolverPagPrincipal);

        jPanel14.add(jPanel13, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel14, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
     /**
     * get un vector byte[] de una ruta especificada
     * @param pathname ruta de la imagen
     * @return -
     */
    private byte[] getImagen(String pathname) {   
        try {
            File archivo = new File(pathname);
            byte[] image = new byte[(int) archivo.length()];
            FileInputStream entrada = new FileInputStream(archivo);
            entrada.read(image);
            return image;
        } catch (Exception e) {
        }
        return null;
    }
    /**
     * convierte un vector de byte[] en una ImageIcon con un ancho y alto
     * especificado
     * @param imagenEnbyte
     * @param width
     * @param high
     * @return una ImageIcon
     */
    private ImageIcon getImageIcon(byte[] imagenEnbyte,int width,int height) {
        try {
            InputStream in = new ByteArrayInputStream(imagenEnbyte);
            BufferedImage image = ImageIO.read(in);
            ImageIcon img = new ImageIcon(image.getScaledInstance(width, height, 0));
            return img;
        } catch (Exception e) {
            try {
                InputStream in = new ByteArrayInputStream(getImagen("src/main/java/resources/sincaratula.jpg"));
                BufferedImage image = ImageIO.read(in);
                ImageIcon img = new ImageIcon(image.getScaledInstance(width, height, 0));
                return img;
            } catch (Exception e2) {
            }
            return null;
        }
    }
    /**
     * Abre el administrador de archivos de windows en descargas para seleccionar la foto
     * del plato ejecutivo en formato png, jpg y gif
     * @param evt 
     */
    private void btnSubirImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirImagenActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        FileNameExtensionFilter fil = new FileNameExtensionFilter("JPG, PNG & GIF","jpg","png","gif");
        jf.setFileFilter(fil);
        jf.setCurrentDirectory(new File("C:/Users/kevit/Downloads"));
        int el = jf.showOpenDialog(this);
        if(el == JFileChooser.APPROVE_OPTION){
            ruta = jf.getSelectedFile().getAbsolutePath();
            System.out.println(ruta);
            lblImagen.setText("");
            lblImagen.setIcon(getImageIcon(getImagen(ruta), 300, 300));
            
        }
    }//GEN-LAST:event_btnSubirImagenActionPerformed
    /**
     * Abre la interfaz GUIPagPrincipalRestaurantes y hace dispose a la interfaz actual
     * @param evt 
     */
    private void btnVolverPagPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverPagPrincipalActionPerformed
        // TODO add your handling code here:
        GUIPagPrincipalRestaurantes.getInstance(service).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverPagPrincipalActionPerformed
    /**
     * Actualiza los datos que utiliza la interfaz actual
     */
    private void actualizarTabla(){
        DefaultTableModel dt = new DefaultTableModel();
        DefaultTableModel dt2 = new DefaultTableModel();
        dt.addColumn("Id");
        dt.addColumn("Nombre");
        dt.addColumn("Tipo");

        dt2.addColumn("Id");
        dt2.addColumn("Nombre");
        dt2.addColumn("Tipo");
        if (!cbxSeleccionarDia.getSelectedItem().equals("Seleccione el dia") && !cbxNumeroDeRegistros.getSelectedItem().equals("Seleccione una opcion")) {
            int numReg = Integer.parseInt(cbxNumeroDeRegistros.getSelectedItem().toString());
            ArrayList<Componente> componentes = service.getComponentes();
            ArrayList<Componente> menuDia = service.getMenuComponentes(restaurante.getId(), DiaSemana.valueOf(cbxSeleccionarDia.getSelectedItem().toString()));
            if (menuDia.size() > 0) {
                btnEliminarcomponenteMenu.setEnabled(true);
            } else {
                btnEliminarcomponenteMenu.setEnabled(false);
            }
            String descripcion = "";
            try {
                descripcion = service.getPlato(restaurante.getId()).getDescripcion();
            } catch (Exception e) {
                
            }
            
            txtDescripcion.setText(descripcion);
            lblImagen.setText("");
            lblImagen.setIcon(getImageIcon(getImagen("src/main/java/resources/plato"+restaurante.getId()+dia.name()+"1.jpg"), 300, 300));
            boolean bandera = false;
            int cont = 0;
            for (Componente c : componentes) {

                for (Componente c2 : menuDia) {
                    if (c.getId() == c2.getId() && c.getNombre().equals(c2.getNombre())) {
                        bandera = true;
                        break;
                    }
                }
                if (bandera == false) {
                    Object fila[] = new Object[dt.getColumnCount()];
                    fila[0] = c.getId();
                    fila[1] = c.getNombre();
                    fila[2] = c.getTipo().name();
                    if (cont < numRegion) {
                        cont++;
                        continue;
                    }
                    if (dt.getRowCount() < numReg) {
                        dt.addRow(fila);
                    } else {
                        break;
                    }
                } else {
                    bandera = false;
                }

            }
            numComponentes = dt.getRowCount();
            if (numComponentes > 0) {
                btnAgregarMenucomponente.setEnabled(true);
                btnVerSiguienteComp.setEnabled(true);
            } else {
                btnAgregarMenucomponente.setEnabled(false);
                btnVerSiguienteComp.setEnabled(false);
            }
            tablaComponentes.setModel(dt);

            for (Componente c : menuDia) {
                Object fila[] = new Object[dt.getColumnCount()];
                fila[0] = c.getId();
                fila[1] = c.getNombre();
                fila[2] = c.getTipo().name();
                dt2.addRow(fila);
            }
            tablaMenuSemanal.setModel(dt2);
        }else{
            btnAgregarMenucomponente.setEnabled(false);
            btnEliminarcomponenteMenu.setEnabled(false);
            tablaComponentes.setModel(dt);
            tablaMenuSemanal.setModel(dt2);
            lblImagen.setText("");
            lblImagen.setIcon(getImageIcon(getImagen(""),300, 300));
            txtDescripcion.setText("");
        }
    }
    /**
     * comboBox: Maneja el numero de registros a mostrar en la tabla de componentes: 5, 10 y 20
     * @param evt 
     */
    private void cbxNumeroDeRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxNumeroDeRegistrosActionPerformed
        // TODO add your handling code here:
        numRegion = 0;
        actualizarTabla();
    }//GEN-LAST:event_cbxNumeroDeRegistrosActionPerformed
    /**
     * comboBox: Maneja las tablas en un dia determinado: LUNES, MARTES, MIERCOLES, JUEVES, VIERNES, SABADO, DOMINGO
     * @param evt 
     */
    private void cbxSeleccionarDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSeleccionarDiaActionPerformed
        // TODO add your handling code here:
        numRegion = 0;
        if (!cbxSeleccionarDia.getSelectedItem().equals("Seleccione el dia")) {
            dia = DiaSemana.valueOf(cbxSeleccionarDia.getSelectedItem().toString());
            restaurante.setMenuSemanal(service.getMenuComponentes(restaurante.getId(), dia));
        }
        actualizarTabla();
    }//GEN-LAST:event_cbxSeleccionarDiaActionPerformed
    /**
     * Elimina un restcomponente de un dia y restaurante terminado. 
     * @param evt 
     */
    private void btnEliminarcomponenteMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarcomponenteMenuActionPerformed
        // TODO add your handling code here:
        int row = tablaMenuSemanal.getSelectedRow();
        Componente componente = new Componente();
        componente.setId(Integer.parseInt(tablaMenuSemanal.getValueAt(row,0).toString()));
        componente.setNombre(tablaMenuSemanal.getValueAt(row,1).toString());
        componente.setTipo(TipoComponente.valueOf(tablaMenuSemanal.getValueAt(row,2).toString()));
        service.deleteComponenteSemanal(restaurante.getId(), componente, DiaSemana.valueOf(cbxSeleccionarDia.getSelectedItem().toString()));
        actualizarTabla();
    }//GEN-LAST:event_btnEliminarcomponenteMenuActionPerformed
    /**
     * Agrega un componente a un restaurante determinado en un dia determiando
     * @param evt 
     */
    private void btnAgregarMenucomponenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMenucomponenteActionPerformed
        // TODO add your handling code here:
        int row = tablaComponentes.getSelectedRow();
        Componente componente = new Componente();
        componente.setId(Integer.parseInt(tablaComponentes.getValueAt(row,0).toString()));
        componente.setNombre(tablaComponentes.getValueAt(row,1).toString());
        componente.setTipo(TipoComponente.valueOf(tablaComponentes.getValueAt(row,2).toString()));
        int aux = 0;
        for (Componente c : service.getMenuComponentes(restaurante.getId(), DiaSemana.valueOf(cbxSeleccionarDia.getSelectedItem().toString()))) 
            if (c.getTipo() == componente.getTipo()) 
                aux++;
        if (aux < 5) 
            service.addComponenteSemanal(restaurante.getId(), componente, DiaSemana.valueOf(cbxSeleccionarDia.getSelectedItem().toString()));
        else 
            warningMessage("No se puede agregar mas componentes de tipo: " + componente.getTipo().name() + ",\nel numero maximo de componentes por categoria es 5", "Atención");
        actualizarTabla();
    }//GEN-LAST:event_btnAgregarMenucomponenteActionPerformed
    /**
     * Muestra los siguientes registros en la tabla componentes dependiendo del numero de registros seleccionado en el comboBox: 5, 10 y 20
     * @param evt 
     */
    private void btnVerSiguienteCompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerSiguienteCompActionPerformed
        // TODO add your handling code here:
        if (!cbxNumeroDeRegistros.getSelectedItem().equals("Seleccione una opcion")) {

            if (numRegion <= numComponentes) {

                numRegion += Integer.parseInt(cbxNumeroDeRegistros.getSelectedItem().toString());
                btnVerAnterioresComp.setEnabled(true);
                actualizarTabla();
            }
            if (numRegion >= numComponentes) {
                btnVerSiguienteComp.setEnabled(false);
            }
        }
        
    }//GEN-LAST:event_btnVerSiguienteCompActionPerformed
    /**
     * Muestra lso anteriores registros en la tabla componentes dependiendo del numero de registros seleccionado en el comboBox: 5, 10 y 20
     * @param evt 
     */
    private void btnVerAnterioresCompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerAnterioresCompActionPerformed
        // TODO add your handling code here:
        if (!cbxNumeroDeRegistros.getSelectedItem().equals("Seleccione una opcion")) {
            if (numRegion>0) {
                numRegion -= Integer.parseInt(cbxNumeroDeRegistros.getSelectedItem().toString());
                if (numRegion==0) {
                    btnVerAnterioresComp.setEnabled(false);
                }
                btnVerSiguienteComp.setEnabled(true);
                actualizarTabla();
            }
        }
    }//GEN-LAST:event_btnVerAnterioresCompActionPerformed
    public boolean guardarImagen(String nombre,byte[] imagen){
        File archivo = new File(nombre);
        try {
            FileOutputStream salida = new FileOutputStream(archivo);
            salida.write(imagen);
            return true;
        } catch (IOException e) {
            return false;
        }
    }
    /**
     * Actualiza el plato con sus respectivos componentes de un determinado restaurante
     * @param evt 
     */
    private void btnActualizarPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarPlatoActionPerformed
        // TODO add your handling code here:
        Plato plato = new Plato();
        plato.setId(1);
        plato.setCantidad(0);
        plato.setDescripcion(txtDescripcion.getText());
        restaurante.setPlato(plato);
        service.updatePlato(restaurante.getId(), plato);
        if (!"".equals(ruta)) {
            guardarImagen("src/main/java/resources/plato"+restaurante.getId()+dia.name()+"1.jpg", getImagen(ruta));
            ruta = "";
        }
        
        warningMessage("Se actualizo el plato menu exitosamente", "Atención");
        cbxNumeroDeRegistros.setSelectedIndex(0);
        cbxSeleccionarDia.setSelectedIndex(0);
        actualizarTabla();
    }//GEN-LAST:event_btnActualizarPlatoActionPerformed
    /**
     * Muestra el plato actualizado en vista cliente o visitante.
     * @param evt 
     */
    private void btnVistaPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVistaPlatoActionPerformed
        // TODO add your handling code here:
        if (!cbxSeleccionarDia.getSelectedItem().equals("Seleccione el dia")) {
            GUIPagMenuRestaurante.getInstance(restaurante,service,dia).setVisible(true);
        }
        
    }//GEN-LAST:event_btnVistaPlatoActionPerformed

    private void btnEliminarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarImagenActionPerformed
        // TODO add your handling code here:
        lblImagen.setIcon(getImageIcon(getImagen("src/main/java/resources/sincaratula"), 300, 300));
        guardarImagen("src/main/java/resources/plato"+restaurante.getId()+dia.name()+"1.jpg", getImagen("src/main/java/resources/sincaratula"));
    }//GEN-LAST:event_btnEliminarImagenActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarPlato;
    private javax.swing.JButton btnAgregarMenucomponente;
    private javax.swing.JButton btnEliminarImagen;
    private javax.swing.JButton btnEliminarcomponenteMenu;
    private javax.swing.JButton btnSubirImagen;
    private javax.swing.JButton btnVerAnterioresComp;
    private javax.swing.JButton btnVerSiguienteComp;
    private javax.swing.JButton btnVistaPlato;
    private javax.swing.JButton btnVolverPagPrincipal;
    private javax.swing.JComboBox<String> cbxNumeroDeRegistros;
    private javax.swing.JComboBox<String> cbxSeleccionarDia;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JTable tablaComponentes;
    private javax.swing.JTable tablaMenuSemanal;
    private javax.swing.JTextPane txtDescripcion;
    // End of variables declaration//GEN-END:variables

}
